name: Build and Deploy fluxo-bi-ui

on:
  push:
    branches:
      - main

env:
  GITEA_REGISTRY: 192.168.100.222:3000

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: docker-linux
    container:
      image: docker:26-cli
      options: --network infra-stack_homelab-network

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Gitea Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITEA_REGISTRY }}
          username: ${{ gitea.actor }}
          password: ${{ secrets.ACTION_GITEA_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GITEA_REGISTRY }}/${{ gitea.repository }}
          tags: type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to K3s Cluster
    needs: build-and-push
    runs-on: docker-linux
    container:
      image: docker:26-cli
      options: --network infra-stack_homelab-network

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.29.0' # Mantemos a mesma versão para consistência

      - name: Deploy to Kubernetes
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig.yaml

          SHORT_SHA=$(echo "${{ gitea.sha }}" | cut -c1-7)
          IMAGE_TAG="${{ env.GITEA_REGISTRY }}/${{ gitea.repository }}:sha-${SHORT_SHA}"

          echo "A usar a imagem: $IMAGE_TAG"
          sed -i "s|IMAGEM_A_SER_SUBSTITUIDA|$IMAGE_TAG|g" k8s/deployment.yaml

          echo "A aplicar manifestos no K3s..."
          kubectl --kubeconfig=kubeconfig.yaml apply -f k8s/deployment.yaml
          kubectl --kubeconfig=kubeconfig.yaml apply -f k8s/service.yaml

          echo "Forçando o reinício do deployment..."
          kubectl --kubeconfig=kubeconfig.yaml rollout restart deployment fluxo-bi-ui-deployment
